pipeline {
    agent {
        node {
            label 'windows-node'
        }
    }
    stages {
        stage('Check and Install NVM') {
            steps {
                script {
                    powershell '''
                        # Run the script with administrative privileges
                        $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
                        $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
                        if (-not $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
                            Write-Output "This script requires administrator privileges."
                            exit 1
                        }

                        # Define the NVM version
                        $nvmVersion = "1.2.0"

                        # Set the installation directory
                        $nvmInstallDir = "C:\\Program Files\\nodejs"

                        # Check if NVM is already installed
                        if (Test-Path "$nvmInstallDir\\nvm.exe") {
                            Write-Output "NVM is already installed."
                            & "$nvmInstallDir\\nvm.exe" version
                        } else {
                            # Set the download URL
                            $nvmUrl = "https://github.com/coreybutler/nvm-windows/releases/download/$nvmVersion/nvm-setup.zip"

                            # Download NVM
                            Invoke-WebRequest -Uri $nvmUrl -OutFile "$env:TEMP\\nvm-setup.zip"

                            # Create the installation directory or clear it if it exists
                            if (Test-Path $nvmInstallDir) {
                                Remove-Item -Recurse -Force $nvmInstallDir
                            }
                            New-Item -ItemType Directory -Force -Path $nvmInstallDir | Out-Null

                            # Unzip the downloaded file
                            Add-Type -AssemblyName System.IO.Compression.FileSystem
                            [System.IO.Compression.ZipFile]::ExtractToDirectory("$env:TEMP\\nvm-setup.zip", $nvmInstallDir)

                            # Add NVM to the system PATH
                            [Environment]::SetEnvironmentVariable("Path", "$([Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::Machine));$nvmInstallDir", [System.EnvironmentVariableTarget]::Machine)

                            # Clean up
                            Remove-Item -Force "$env:TEMP\\nvm-setup.zip"

                            # Verify the installation
                            if (Test-Path "$nvmInstallDir\\nvm.exe") {
                                Write-Output "NVM installed successfully."
                                & "$nvmInstallDir\\nvm.exe" version
                            } else {
                                Write-Output "NVM installation failed."
                            }
                        }
                    '''
                }
            }
        }
    }
}
