pipeline {
    agent {
        label 'windows-node'
    }
    environment {
        NVM_VERSION = '1.2.0'
        NVM_URL = 'https://github.com/coreybutler/nvm-windows/releases/download/1.2.0/nvm-setup.zip'
        NVM_INSTALL_DIR = 'C:\\nvm'
    }
    stages {
        stage('Install NVM if not Present') {
            steps {
                powershell """
                # Check if NVM is installed
                if (-Not (Get-Command nvm -ErrorAction SilentlyContinue)) {
                    # Check if the NVM installation directory exists
                    if (Test-Path '${NVM_INSTALL_DIR}') {
                        # Clear the directory
                        Get-ChildItem -Path '${NVM_INSTALL_DIR}' -Recurse -Force | Remove-Item -Recurse -Force
                        Write-Output "NVM installation directory cleared: ${NVM_INSTALL_DIR}"
                    } else {
                        # Create the directory
                        New-Item -ItemType Directory -Force -Path '${NVM_INSTALL_DIR}' | Out-Null
                        Write-Output "NVM installation directory created: ${NVM_INSTALL_DIR}"
                    }
                    Write-Output "NVM is not installed. Installing now..."

                    # Download NVM
                    Invoke-WebRequest -Uri \"${NVM_URL}\" -OutFile \"\$env:TEMP\\nvm-setup.zip\"

                    # Unzip the downloaded file
                    Add-Type -AssemblyName System.IO.Compression.FileSystem
                    [System.IO.Compression.ZipFile]::ExtractToDirectory(\"\$env:TEMP\\nvm-setup.zip\", \"${NVM_INSTALL_DIR}\")

                    # Add NVM to the user-level Path
                    [Environment]::SetEnvironmentVariable(
                        "Path",
                        \"\$([Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::User));${NVM_INSTALL_DIR}\",
                        [System.EnvironmentVariableTarget]::User
                    )
                    Write-Output "NVM installed and user-level Path updated."
                } else {
                    Write-Output "NVM is already installed."
                }
                """
            }
        }
    }
}
